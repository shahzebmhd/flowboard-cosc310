"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nuqs";
exports.ids = ["vendor-chunks/nuqs"];
exports.modules = {

/***/ "(ssr)/./node_modules/nuqs/dist/chunk-MJO6WWF3.js":
/*!**************************************************!*\
  !*** ./node_modules/nuqs/dist/chunk-MJO6WWF3.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createParser: () => (/* binding */ createParser),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   getDefaultThrottle: () => (/* binding */ getDefaultThrottle),\n/* harmony export */   parseAsArrayOf: () => (/* binding */ parseAsArrayOf),\n/* harmony export */   parseAsBoolean: () => (/* binding */ parseAsBoolean),\n/* harmony export */   parseAsFloat: () => (/* binding */ parseAsFloat),\n/* harmony export */   parseAsHex: () => (/* binding */ parseAsHex),\n/* harmony export */   parseAsInteger: () => (/* binding */ parseAsInteger),\n/* harmony export */   parseAsIsoDateTime: () => (/* binding */ parseAsIsoDateTime),\n/* harmony export */   parseAsJson: () => (/* binding */ parseAsJson),\n/* harmony export */   parseAsNumberLiteral: () => (/* binding */ parseAsNumberLiteral),\n/* harmony export */   parseAsString: () => (/* binding */ parseAsString),\n/* harmony export */   parseAsStringEnum: () => (/* binding */ parseAsStringEnum),\n/* harmony export */   parseAsStringLiteral: () => (/* binding */ parseAsStringLiteral),\n/* harmony export */   parseAsTimestamp: () => (/* binding */ parseAsTimestamp),\n/* harmony export */   renderQueryString: () => (/* binding */ renderQueryString),\n/* harmony export */   safeParse: () => (/* binding */ safeParse)\n/* harmony export */ });\n// src/debug.ts\nvar enabled = isDebugEnabled();\nfunction debug(message, ...args) {\n  if (!enabled) {\n    return;\n  }\n  const msg = sprintf(message, ...args);\n  performance.mark(msg);\n  console.log(message, ...args);\n}\nfunction warn(message, ...args) {\n  if (!enabled) {\n    return;\n  }\n  console.warn(message, ...args);\n}\nfunction sprintf(base, ...args) {\n  return base.replace(/%[sfdO]/g, (match) => {\n    const arg = args.shift();\n    if (match === \"%O\" && arg) {\n      return JSON.stringify(arg).replace(/\"([^\"]+)\":/g, \"$1:\");\n    } else {\n      return String(arg);\n    }\n  });\n}\nfunction isDebugEnabled() {\n  try {\n    if (typeof localStorage === \"undefined\") {\n      return false;\n    }\n    const test = \"nuqs-localStorage-test\";\n    localStorage.setItem(test, test);\n    const isStorageAvailable = localStorage.getItem(test) === test;\n    localStorage.removeItem(test);\n    if (!isStorageAvailable) {\n      return false;\n    }\n  } catch (error2) {\n    console.error(\n      \"[nuqs]: debug mode is disabled (localStorage unavailable).\",\n      error2\n    );\n    return false;\n  }\n  const debug2 = localStorage.getItem(\"debug\") ?? \"\";\n  return debug2.includes(\"nuqs\") || debug2.includes(\"next-usequerystate\");\n}\n\n// src/utils.ts\nfunction safeParse(parser, value, key) {\n  try {\n    return parser(value);\n  } catch (error2) {\n    warn(\n      \"[nuqs] Error while parsing value `%s`: %O\" + (key ? \" (for key `%s`)\" : \"\"),\n      value,\n      error2,\n      key\n    );\n    return null;\n  }\n}\nfunction getDefaultThrottle() {\n  if (typeof window === \"undefined\") return 50;\n  const isSafari = Boolean(window.GestureEvent);\n  if (!isSafari) {\n    return 50;\n  }\n  try {\n    const match = navigator.userAgent?.match(/version\\/([\\d\\.]+) safari/i);\n    return parseFloat(match[1]) >= 17 ? 120 : 320;\n  } catch {\n    return 320;\n  }\n}\n\n// src/parsers.ts\nfunction createParser(parser) {\n  function parseServerSideNullable(value) {\n    if (typeof value === \"undefined\") {\n      return null;\n    }\n    let str = \"\";\n    if (Array.isArray(value)) {\n      if (value[0] === void 0) {\n        return null;\n      }\n      str = value[0];\n    }\n    if (typeof value === \"string\") {\n      str = value;\n    }\n    return safeParse(parser.parse, str);\n  }\n  return {\n    eq: (a, b) => a === b,\n    ...parser,\n    parseServerSide: parseServerSideNullable,\n    withDefault(defaultValue) {\n      return {\n        ...this,\n        defaultValue,\n        parseServerSide(value) {\n          return parseServerSideNullable(value) ?? defaultValue;\n        }\n      };\n    },\n    withOptions(options) {\n      return {\n        ...this,\n        ...options\n      };\n    }\n  };\n}\nvar parseAsString = createParser({\n  parse: (v) => v,\n  serialize: (v) => `${v}`\n});\nvar parseAsInteger = createParser({\n  parse: (v) => {\n    const int = parseInt(v);\n    if (Number.isNaN(int)) {\n      return null;\n    }\n    return int;\n  },\n  serialize: (v) => Math.round(v).toFixed()\n});\nvar parseAsHex = createParser({\n  parse: (v) => {\n    const int = parseInt(v, 16);\n    if (Number.isNaN(int)) {\n      return null;\n    }\n    return int;\n  },\n  serialize: (v) => {\n    const hex = Math.round(v).toString(16);\n    return hex.padStart(hex.length + hex.length % 2, \"0\");\n  }\n});\nvar parseAsFloat = createParser({\n  parse: (v) => {\n    const float = parseFloat(v);\n    if (Number.isNaN(float)) {\n      return null;\n    }\n    return float;\n  },\n  serialize: (v) => v.toString()\n});\nvar parseAsBoolean = createParser({\n  parse: (v) => v === \"true\",\n  serialize: (v) => v ? \"true\" : \"false\"\n});\nvar parseAsTimestamp = createParser({\n  parse: (v) => {\n    const ms = parseInt(v);\n    if (Number.isNaN(ms)) {\n      return null;\n    }\n    return new Date(ms);\n  },\n  serialize: (v) => v.valueOf().toString()\n});\nvar parseAsIsoDateTime = createParser({\n  parse: (v) => {\n    const date = new Date(v);\n    if (Number.isNaN(date.valueOf())) {\n      return null;\n    }\n    return date;\n  },\n  serialize: (v) => v.toISOString()\n});\nfunction parseAsStringEnum(validValues) {\n  return createParser({\n    parse: (query) => {\n      const asEnum = query;\n      if (validValues.includes(asEnum)) {\n        return asEnum;\n      }\n      return null;\n    },\n    serialize: (value) => value.toString()\n  });\n}\nfunction parseAsStringLiteral(validValues) {\n  return createParser({\n    parse: (query) => {\n      const asConst = query;\n      if (validValues.includes(asConst)) {\n        return asConst;\n      }\n      return null;\n    },\n    serialize: (value) => value.toString()\n  });\n}\nfunction parseAsNumberLiteral(validValues) {\n  return createParser({\n    parse: (query) => {\n      const asConst = parseFloat(query);\n      if (validValues.includes(asConst)) {\n        return asConst;\n      }\n      return null;\n    },\n    serialize: (value) => value.toString()\n  });\n}\nfunction parseAsJson(parser) {\n  return createParser({\n    parse: (query) => {\n      try {\n        const obj = JSON.parse(query);\n        if (typeof parser === \"function\") {\n          return parser(obj);\n        }\n        return obj;\n      } catch {\n        return null;\n      }\n    },\n    serialize: (value) => JSON.stringify(value),\n    eq(a, b) {\n      return a === b || JSON.stringify(a) === JSON.stringify(b);\n    }\n  });\n}\nfunction parseAsArrayOf(itemParser, separator = \",\") {\n  const itemEq = itemParser.eq ?? ((a, b) => a === b);\n  const encodedSeparator = encodeURIComponent(separator);\n  return createParser({\n    parse: (query) => {\n      if (query === \"\") {\n        return [];\n      }\n      return query.split(separator).map(\n        (item, index) => safeParse(\n          itemParser.parse,\n          item.replaceAll(encodedSeparator, separator),\n          `[${index}]`\n        )\n      ).filter((value) => value !== null && value !== void 0);\n    },\n    serialize: (values) => values.map((value) => {\n      const str = itemParser.serialize ? itemParser.serialize(value) : String(value);\n      return str.replaceAll(separator, encodedSeparator);\n    }).join(separator),\n    eq(a, b) {\n      if (a === b) {\n        return true;\n      }\n      if (a.length !== b.length) {\n        return false;\n      }\n      return a.every((value, index) => itemEq(value, b[index]));\n    }\n  });\n}\n\n// src/url-encoding.ts\nfunction renderQueryString(search) {\n  if (search.size === 0) {\n    return \"\";\n  }\n  const query = [];\n  for (const [key, value] of search.entries()) {\n    const safeKey = key.replace(/#/g, \"%23\").replace(/&/g, \"%26\").replace(/\\+/g, \"%2B\").replace(/=/g, \"%3D\").replace(/\\?/g, \"%3F\");\n    query.push(`${safeKey}=${encodeQueryValue(value)}`);\n  }\n  return \"?\" + query.join(\"&\");\n}\nfunction encodeQueryValue(input) {\n  return input.replace(/%/g, \"%25\").replace(/\\+/g, \"%2B\").replace(/ /g, \"+\").replace(/#/g, \"%23\").replace(/&/g, \"%26\").replace(/\"/g, \"%22\").replace(/'/g, \"%27\").replace(/`/g, \"%60\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\");\n}\n\n// src/serializer.ts\nfunction createSerializer(parsers) {\n  function serialize(baseOrValues, values = {}) {\n    const [base, search] = isBase(baseOrValues) ? splitBase(baseOrValues) : [\"\", new URLSearchParams()];\n    const vals = isBase(baseOrValues) ? values : baseOrValues;\n    if (vals === null) {\n      for (const key in parsers) {\n        search.delete(key);\n      }\n      return base + renderQueryString(search);\n    }\n    for (const key in parsers) {\n      const parser = parsers[key];\n      const value = vals[key];\n      if (!parser || value === void 0) {\n        continue;\n      }\n      const isMatchingDefault = parser.defaultValue !== void 0 && (parser.eq ?? ((a, b) => a === b))(value, parser.defaultValue);\n      if (value === null || parser.clearOnDefault && isMatchingDefault) {\n        search.delete(key);\n      } else {\n        search.set(key, parser.serialize(value));\n      }\n    }\n    return base + renderQueryString(search);\n  }\n  return serialize;\n}\nfunction isBase(base) {\n  return typeof base === \"string\" || base instanceof URLSearchParams || base instanceof URL;\n}\nfunction splitBase(base) {\n  if (typeof base === \"string\") {\n    const [path = \"\", search] = base.split(\"?\");\n    return [path, new URLSearchParams(search)];\n  } else if (base instanceof URLSearchParams) {\n    return [\"\", new URLSearchParams(base)];\n  } else {\n    return [\n      base.origin + base.pathname,\n      new URLSearchParams(base.searchParams)\n    ];\n  }\n}\n\n// src/errors.ts\nvar errors = {\n  409: \"Multiple versions of the library are loaded. This may lead to unexpected behavior. Currently using `%s`, but `%s` was about to load on top.\",\n  429: \"URL update rate-limited by the browser. Consider increasing `throttleMs` for key(s) `%s`. %O\",\n  500: \"Empty search params cache. Search params can't be accessed in Layouts.\",\n  501: \"Search params cache already populated. Have you called `parse` twice?\"\n};\nfunction error(code) {\n  return `[nuqs] ${errors[code]}\n  See https://err.47ng.com/NUQS-${code}`;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/nuqs/dist/chunk-MJO6WWF3.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/nuqs/dist/index.js":
/*!*****************************************!*\
  !*** ./node_modules/nuqs/dist/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createParser: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.createParser),\n/* harmony export */   createSerializer: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.createSerializer),\n/* harmony export */   parseAsArrayOf: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsArrayOf),\n/* harmony export */   parseAsBoolean: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsBoolean),\n/* harmony export */   parseAsFloat: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsFloat),\n/* harmony export */   parseAsHex: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsHex),\n/* harmony export */   parseAsInteger: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsInteger),\n/* harmony export */   parseAsIsoDateTime: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsIsoDateTime),\n/* harmony export */   parseAsJson: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsJson),\n/* harmony export */   parseAsNumberLiteral: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsNumberLiteral),\n/* harmony export */   parseAsString: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsString),\n/* harmony export */   parseAsStringEnum: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsStringEnum),\n/* harmony export */   parseAsStringLiteral: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsStringLiteral),\n/* harmony export */   parseAsTimestamp: () => (/* reexport safe */ _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsTimestamp),\n/* harmony export */   queryTypes: () => (/* binding */ queryTypes),\n/* harmony export */   subscribeToQueryUpdates: () => (/* binding */ subscribeToQueryUpdates),\n/* harmony export */   useQueryState: () => (/* binding */ useQueryState),\n/* harmony export */   useQueryStates: () => (/* binding */ useQueryStates)\n/* harmony export */ });\n/* harmony import */ var _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-MJO6WWF3.js */ \"(ssr)/./node_modules/nuqs/dist/chunk-MJO6WWF3.js\");\n/* harmony import */ var mitt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mitt */ \"(ssr)/./node_modules/mitt/dist/mitt.mjs\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\n\n\n// src/deprecated.ts\nvar queryTypes = {\n  /**\n   * @deprecated use `parseAsString` instead.\n   */\n  string: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsString,\n  /**\n   * @deprecated use `parseAsInteger` instead.\n   */\n  integer: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsInteger,\n  /**\n   * @deprecated use `parseAsFloat` instead.\n   */\n  float: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsFloat,\n  /**\n   * @deprecated use `parseAsBoolean` instead.\n   */\n  boolean: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsBoolean,\n  /**\n   * @deprecated use `parseAsTimestamp` instead.\n   */\n  timestamp: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsTimestamp,\n  /**\n   * @deprecated use `parseAsIsoDateTime` instead.\n   */\n  isoDateTime: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsIsoDateTime,\n  /**\n   * @deprecated use `parseAsStringEnum` instead.\n   */\n  stringEnum: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsStringEnum,\n  /**\n   * @deprecated use `parseAsJson` instead.\n   */\n  json: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsJson,\n  /**\n   * @deprecated use `parseAsArrayOf` instead.\n   */\n  array: _chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.parseAsArrayOf\n};\n\n// src/update-queue.ts\nvar FLUSH_RATE_LIMIT_MS = (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultThrottle)();\nvar updateQueue = /* @__PURE__ */ new Map();\nvar queueOptions = {\n  history: \"replace\",\n  scroll: false,\n  shallow: true,\n  throttleMs: FLUSH_RATE_LIMIT_MS\n};\nvar transitionsQueue = /* @__PURE__ */ new Set();\nvar lastFlushTimestamp = 0;\nvar flushPromiseCache = null;\nfunction enqueueQueryStringUpdate(key, value, serialize, options) {\n  const serializedOrNull = value === null ? null : serialize(value);\n  (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Enqueueing %s=%s %O\", key, serializedOrNull, options);\n  updateQueue.set(key, serializedOrNull);\n  if (options.history === \"push\") {\n    queueOptions.history = \"push\";\n  }\n  if (options.scroll) {\n    queueOptions.scroll = true;\n  }\n  if (options.shallow === false) {\n    queueOptions.shallow = false;\n  }\n  if (options.startTransition) {\n    transitionsQueue.add(options.startTransition);\n    queueOptions.shallow = false;\n  }\n  queueOptions.throttleMs = Math.max(\n    options.throttleMs ?? FLUSH_RATE_LIMIT_MS,\n    Number.isFinite(queueOptions.throttleMs) ? queueOptions.throttleMs : 0\n  );\n  return serializedOrNull;\n}\nfunction getQueuedValue(key) {\n  return updateQueue.get(key) ?? null;\n}\nfunction scheduleFlushToURL(router) {\n  if (flushPromiseCache === null) {\n    flushPromiseCache = new Promise((resolve, reject) => {\n      if (!Number.isFinite(queueOptions.throttleMs)) {\n        (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Skipping flush due to throttleMs=Infinity\");\n        resolve(new URLSearchParams(location.search));\n        setTimeout(() => {\n          flushPromiseCache = null;\n        }, 0);\n        return;\n      }\n      function flushNow() {\n        lastFlushTimestamp = performance.now();\n        const [search, error2] = flushUpdateQueue(router);\n        if (error2 === null) {\n          resolve(search);\n        } else {\n          reject(search);\n        }\n        flushPromiseCache = null;\n      }\n      function runOnNextTick() {\n        const now = performance.now();\n        const timeSinceLastFlush = now - lastFlushTimestamp;\n        const throttleMs = queueOptions.throttleMs;\n        const flushInMs = Math.max(\n          0,\n          Math.min(throttleMs, throttleMs - timeSinceLastFlush)\n        );\n        (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n          \"[nuqs queue] Scheduling flush in %f ms. Throttled at %f ms\",\n          flushInMs,\n          throttleMs\n        );\n        if (flushInMs === 0) {\n          flushNow();\n        } else {\n          setTimeout(flushNow, flushInMs);\n        }\n      }\n      setTimeout(runOnNextTick, 0);\n    });\n  }\n  return flushPromiseCache;\n}\nfunction flushUpdateQueue(router) {\n  const search = new URLSearchParams(location.search);\n  if (updateQueue.size === 0) {\n    return [search, null];\n  }\n  const items = Array.from(updateQueue.entries());\n  const options = { ...queueOptions };\n  const transitions = Array.from(transitionsQueue);\n  updateQueue.clear();\n  transitionsQueue.clear();\n  queueOptions.history = \"replace\";\n  queueOptions.scroll = false;\n  queueOptions.shallow = true;\n  queueOptions.throttleMs = FLUSH_RATE_LIMIT_MS;\n  (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Flushing queue %O with options %O\", items, options);\n  for (const [key, value] of items) {\n    if (value === null) {\n      search.delete(key);\n    } else {\n      search.set(key, value);\n    }\n  }\n  try {\n    const nextRouter = window.next?.router;\n    const isPagesRouter = typeof nextRouter?.state?.asPath === \"string\";\n    if (isPagesRouter) {\n      const url = renderURL(nextRouter.state.asPath.split(\"?\")[0] ?? \"\", search);\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue (pages)] Updating url: %s\", url);\n      const method = options.history === \"push\" ? nextRouter.push : nextRouter.replace;\n      method.call(nextRouter, url, url, {\n        scroll: options.scroll,\n        shallow: options.shallow\n      });\n    } else {\n      const url = renderURL(location.origin + location.pathname, search);\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue (app)] Updating url: %s\", url);\n      const updateMethod = options.history === \"push\" ? history.pushState : history.replaceState;\n      const state = (window.next?.version ?? \"\") >= \"14.1.0\" ? null : history.state;\n      updateMethod.call(\n        history,\n        state,\n        // Our own updates have a marker to prevent syncing\n        // when the URL changes (we've already sync'd them up\n        // via `emitter.emit(key, newValue)` above, without\n        // going through the parsers).\n        NOSYNC_MARKER,\n        url\n      );\n      if (options.scroll) {\n        window.scrollTo(0, 0);\n      }\n      if (!options.shallow) {\n        compose(transitions, () => {\n          router.replace(url, {\n            scroll: false\n          });\n        });\n      }\n    }\n    return [search, null];\n  } catch (err) {\n    console.error((0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.error)(429), items.map(([key]) => key).join(), err);\n    return [search, err];\n  }\n}\nfunction renderURL(base, search) {\n  const hashlessBase = base.split(\"#\")[0] ?? \"\";\n  const query = (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.renderQueryString)(search);\n  const hash = location.hash;\n  return hashlessBase + query + hash;\n}\nfunction compose(fns, final) {\n  const recursiveCompose = (index) => {\n    if (index === fns.length) {\n      return final();\n    }\n    const fn = fns[index];\n    if (!fn) {\n      throw new Error(\"Invalid transition function\");\n    }\n    fn(() => recursiveCompose(index + 1));\n  };\n  recursiveCompose(0);\n}\n\n// src/sync.ts\nvar SYNC_EVENT_KEY = Symbol(\"__nuqs__SYNC__\");\nvar NOSYNC_MARKER = \"__nuqs__NO_SYNC__\";\nvar NOTIFY_EVENT_KEY = Symbol(\"__nuqs__NOTIFY__\");\nvar emitter = (0,mitt__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\nfunction subscribeToQueryUpdates(callback) {\n  emitter.on(NOTIFY_EVENT_KEY, callback);\n  return () => emitter.off(NOTIFY_EVENT_KEY, callback);\n}\nif (typeof history === \"object\") {\n  patchHistory();\n}\nfunction patchHistory() {\n  const version = \"1.20.0\";\n  const patched = history.__nuqs_patched;\n  if (patched) {\n    if (patched !== version) {\n      console.error((0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.error)(409), patched, version);\n    }\n    return;\n  }\n  (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs] Patching history with %s\", version);\n  for (const method of [\"pushState\", \"replaceState\"]) {\n    const original = history[method].bind(history);\n    history[method] = function nuqs_patchedHistory(state, title, url) {\n      if (!url) {\n        (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs] history.%s(null) (%s) %O\", method, title, state);\n        return original(state, title, url);\n      }\n      const source = title === NOSYNC_MARKER ? \"internal\" : \"external\";\n      const search = new URL(url, location.origin).searchParams;\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs] history.%s(%s) (%s) %O\", method, url, source, state);\n      if (source === \"external\") {\n        for (const [key, value] of search.entries()) {\n          const queueValue = getQueuedValue(key);\n          if (queueValue !== null && queueValue !== value) {\n            (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n              \"[nuqs] Overwrite detected for key: %s, Server: %s, queue: %s\",\n              key,\n              value,\n              queueValue\n            );\n            search.set(key, queueValue);\n          }\n        }\n        setTimeout(() => {\n          (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n            \"[nuqs] External history.%s call: triggering sync with %s\",\n            method,\n            search\n          );\n          emitter.emit(SYNC_EVENT_KEY, search);\n          emitter.emit(NOTIFY_EVENT_KEY, { search, source });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          emitter.emit(NOTIFY_EVENT_KEY, { search, source });\n        }, 0);\n      }\n      return original(state, title === NOSYNC_MARKER ? \"\" : title, url);\n    };\n  }\n  Object.defineProperty(history, \"__nuqs_patched\", {\n    value: version,\n    writable: false,\n    enumerable: false,\n    configurable: false\n  });\n}\nfunction useQueryState(key, {\n  history: history2 = \"replace\",\n  shallow = true,\n  scroll = false,\n  throttleMs = FLUSH_RATE_LIMIT_MS,\n  parse = (x) => x,\n  serialize = String,\n  eq = (a, b) => a === b,\n  defaultValue = void 0,\n  clearOnDefault = false,\n  startTransition\n} = {\n  history: \"replace\",\n  scroll: false,\n  shallow: true,\n  throttleMs: FLUSH_RATE_LIMIT_MS,\n  parse: (x) => x,\n  serialize: String,\n  eq: (a, b) => a === b,\n  clearOnDefault: false,\n  defaultValue: void 0\n}) {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  const initialSearchParams = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useSearchParams)();\n  const queryRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef(null);\n  const [internalState, setInternalState] = react__WEBPACK_IMPORTED_MODULE_3__.useState(() => {\n    const queueValue = getQueuedValue(key);\n    const urlValue = initialSearchParams?.get(key) ?? null;\n    const value = queueValue ?? urlValue;\n    queryRef.current = value;\n    return value === null ? null : (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.safeParse)(parse, value, key);\n  });\n  const stateRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef(internalState);\n  (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n    \"[nuqs `%s`] render - state: %O, iSP: %s\",\n    key,\n    internalState,\n    initialSearchParams?.get(key) ?? null\n  );\n  react__WEBPACK_IMPORTED_MODULE_3__.useEffect(() => {\n    if (window.next?.version !== \"14.0.3\") {\n      return;\n    }\n    const query = initialSearchParams.get(key) ?? null;\n    if (query === queryRef.current) {\n      return;\n    }\n    const state = query === null ? null : (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.safeParse)(parse, query, key);\n    (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs `%s`] syncFromUseSearchParams %O\", key, state);\n    stateRef.current = state;\n    queryRef.current = query;\n    setInternalState(state);\n  }, [initialSearchParams?.get(key), key]);\n  react__WEBPACK_IMPORTED_MODULE_3__.useInsertionEffect(() => {\n    function updateInternalState({ state, query }) {\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs `%s`] updateInternalState %O\", key, state);\n      stateRef.current = state;\n      queryRef.current = query;\n      setInternalState(state);\n    }\n    function syncFromURL(search) {\n      const query = search.get(key);\n      if (query === queryRef.current) {\n        return;\n      }\n      const state = query === null ? null : (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.safeParse)(parse, query, key);\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs `%s`] syncFromURL %O\", key, state);\n      updateInternalState({ state, query });\n    }\n    (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs `%s`] subscribing to sync\", key);\n    emitter.on(SYNC_EVENT_KEY, syncFromURL);\n    emitter.on(key, updateInternalState);\n    return () => {\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs `%s`] unsubscribing from sync\", key);\n      emitter.off(SYNC_EVENT_KEY, syncFromURL);\n      emitter.off(key, updateInternalState);\n    };\n  }, [key]);\n  const update = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(\n    (stateUpdater, options = {}) => {\n      let newValue = isUpdaterFunction(stateUpdater) ? stateUpdater(stateRef.current ?? defaultValue ?? null) : stateUpdater;\n      if ((options.clearOnDefault ?? clearOnDefault) && newValue !== null && defaultValue !== void 0 && eq(newValue, defaultValue)) {\n        newValue = null;\n      }\n      queryRef.current = enqueueQueryStringUpdate(key, newValue, serialize, {\n        // Call-level options take precedence over hook declaration options.\n        history: options.history ?? history2,\n        shallow: options.shallow ?? shallow,\n        scroll: options.scroll ?? scroll,\n        throttleMs: options.throttleMs ?? throttleMs,\n        startTransition: options.startTransition ?? startTransition\n      });\n      emitter.emit(key, { state: newValue, query: queryRef.current });\n      return scheduleFlushToURL(router);\n    },\n    [key, history2, shallow, scroll, throttleMs, startTransition]\n  );\n  return [internalState ?? defaultValue ?? null, update];\n}\nfunction isUpdaterFunction(stateUpdater) {\n  return typeof stateUpdater === \"function\";\n}\nvar defaultUrlKeys = {};\nfunction useQueryStates(keyMap, {\n  history: history2 = \"replace\",\n  scroll = false,\n  shallow = true,\n  throttleMs = FLUSH_RATE_LIMIT_MS,\n  clearOnDefault = false,\n  startTransition,\n  urlKeys = defaultUrlKeys\n} = {}) {\n  const stateKeys = Object.keys(keyMap).join(\",\");\n  const resolvedUrlKeys = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(\n    () => Object.fromEntries(\n      Object.keys(keyMap).map((key) => [key, urlKeys[key] ?? key])\n    ),\n    [stateKeys, urlKeys]\n  );\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  const initialSearchParams = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useSearchParams)();\n  const queryRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef({});\n  const [internalState, setInternalState] = react__WEBPACK_IMPORTED_MODULE_3__.useState(() => {\n    const source = initialSearchParams ?? new URLSearchParams();\n    queryRef.current = Object.fromEntries(source.entries());\n    return parseMap(keyMap, urlKeys, source);\n  });\n  const stateRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef(internalState);\n  (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n    \"[nuq+ `%s`] render - state: %O, iSP: %s\",\n    stateKeys,\n    internalState,\n    initialSearchParams\n  );\n  react__WEBPACK_IMPORTED_MODULE_3__.useEffect(() => {\n    if (window.next?.version !== \"14.0.3\") {\n      return;\n    }\n    const state = parseMap(\n      keyMap,\n      urlKeys,\n      initialSearchParams,\n      queryRef.current,\n      stateRef.current\n    );\n    setInternalState(state);\n  }, [\n    Object.keys(resolvedUrlKeys).map((key) => initialSearchParams?.get(key)).join(\"&\"),\n    stateKeys\n  ]);\n  react__WEBPACK_IMPORTED_MODULE_3__.useInsertionEffect(() => {\n    function updateInternalState(state) {\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuq+ `%s`] updateInternalState %O\", stateKeys, state);\n      stateRef.current = state;\n      setInternalState(state);\n    }\n    function syncFromURL(search) {\n      const state = parseMap(\n        keyMap,\n        urlKeys,\n        search,\n        queryRef.current,\n        stateRef.current\n      );\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuq+ `%s`] syncFromURL %O\", stateKeys, state);\n      updateInternalState(state);\n    }\n    const handlers = Object.keys(keyMap).reduce(\n      (handlers2, stateKey) => {\n        handlers2[stateKey] = ({\n          state,\n          query\n        }) => {\n          const { defaultValue } = keyMap[stateKey];\n          const urlKey = resolvedUrlKeys[stateKey];\n          stateRef.current = {\n            ...stateRef.current,\n            [stateKey]: state ?? defaultValue ?? null\n          };\n          queryRef.current[urlKey] = query;\n          (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n            \"[nuq+ `%s`] Cross-hook key sync %s: %O (default: %O). Resolved: %O\",\n            stateKeys,\n            urlKey,\n            state,\n            defaultValue,\n            stateRef.current\n          );\n          updateInternalState(stateRef.current);\n        };\n        return handlers2;\n      },\n      {}\n    );\n    emitter.on(SYNC_EVENT_KEY, syncFromURL);\n    for (const stateKey of Object.keys(keyMap)) {\n      const urlKey = resolvedUrlKeys[stateKey];\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuq+ `%s`] Subscribing to sync for `%s`\", stateKeys, urlKey);\n      emitter.on(urlKey, handlers[stateKey]);\n    }\n    return () => {\n      emitter.off(SYNC_EVENT_KEY, syncFromURL);\n      for (const stateKey of Object.keys(keyMap)) {\n        const urlKey = resolvedUrlKeys[stateKey];\n        (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuq+ `%s`] Unsubscribing to sync for `%s`\", stateKeys, urlKey);\n        emitter.off(urlKey, handlers[stateKey]);\n      }\n    };\n  }, [keyMap, resolvedUrlKeys]);\n  const update = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(\n    (stateUpdater, callOptions = {}) => {\n      const newState = typeof stateUpdater === \"function\" ? stateUpdater(stateRef.current) : stateUpdater === null ? Object.fromEntries(\n        Object.keys(keyMap).map((key) => [key, null])\n      ) : stateUpdater;\n      (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuq+ `%s`] setState: %O\", stateKeys, newState);\n      for (let [stateKey, value] of Object.entries(newState)) {\n        const parser = keyMap[stateKey];\n        const urlKey = resolvedUrlKeys[stateKey];\n        if (!parser) {\n          continue;\n        }\n        if ((callOptions.clearOnDefault ?? parser.clearOnDefault ?? clearOnDefault) && value !== null && parser.defaultValue !== void 0 && (parser.eq ?? ((a, b) => a === b))(value, parser.defaultValue)) {\n          value = null;\n        }\n        queryRef.current[urlKey] = enqueueQueryStringUpdate(\n          urlKey,\n          value,\n          parser.serialize ?? String,\n          {\n            // Call-level options take precedence over individual parser options\n            // which take precedence over global options\n            history: callOptions.history ?? parser.history ?? history2,\n            shallow: callOptions.shallow ?? parser.shallow ?? shallow,\n            scroll: callOptions.scroll ?? parser.scroll ?? scroll,\n            throttleMs: callOptions.throttleMs ?? parser.throttleMs ?? throttleMs,\n            startTransition: callOptions.startTransition ?? parser.startTransition ?? startTransition\n          }\n        );\n        emitter.emit(urlKey, {\n          state: value,\n          query: queryRef.current[urlKey] ?? null\n        });\n      }\n      return scheduleFlushToURL(router);\n    },\n    [\n      keyMap,\n      history2,\n      shallow,\n      scroll,\n      throttleMs,\n      startTransition,\n      resolvedUrlKeys\n    ]\n  );\n  return [internalState, update];\n}\nfunction parseMap(keyMap, urlKeys, searchParams, cachedQuery, cachedState) {\n  return Object.keys(keyMap).reduce((obj, stateKey) => {\n    const urlKey = urlKeys?.[stateKey] ?? stateKey;\n    const { defaultValue, parse } = keyMap[stateKey];\n    const urlQuery = searchParams?.get(urlKey) ?? null;\n    const queueQuery = getQueuedValue(urlKey);\n    const query = queueQuery ?? urlQuery;\n    if (cachedQuery && cachedState && cachedQuery[urlKey] === query) {\n      obj[stateKey] = cachedState[stateKey] ?? defaultValue ?? null;\n      return obj;\n    }\n    const value = query === null ? null : (0,_chunk_MJO6WWF3_js__WEBPACK_IMPORTED_MODULE_0__.safeParse)(parse, query, stateKey);\n    obj[stateKey] = value ?? defaultValue ?? null;\n    if (cachedQuery) {\n      cachedQuery[urlKey] = query;\n    }\n    return obj;\n  }, {});\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/nuqs/dist/index.js\n");

/***/ })

};
;